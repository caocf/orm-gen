//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.18 at 09:24:53 PM CST 
//


package bh.toolkit.srcgen.model.mybatis;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Mapper complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Mapper">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="cache-ref" type="{http://slp/toolkit/ormgen/model/mybatis}Cache-ref"/>
 *         &lt;element name="cache" type="{http://slp/toolkit/ormgen/model/mybatis}Cache"/>
 *         &lt;element name="resultMap" type="{http://slp/toolkit/ormgen/model/mybatis}ResultMap" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="parameterMap" type="{http://slp/toolkit/ormgen/model/mybatis}ParameterMap" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="sql" type="{http://slp/toolkit/ormgen/model/mybatis}Sql" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="select" type="{http://slp/toolkit/ormgen/model/mybatis}Select" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="insert" type="{http://slp/toolkit/ormgen/model/mybatis}Insert" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="update" type="{http://slp/toolkit/ormgen/model/mybatis}Update" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="delete" type="{http://slp/toolkit/ormgen/model/mybatis}Delete" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/choice>
 *       &lt;attribute name="namespace" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Mapper", propOrder = {
    "cacheRef",
    "cache",
    "resultMap",
    "parameterMap",
    "sql",
    "select",
    "insert",
    "update",
    "delete"
})
public class Mapper {

    @XmlElement(name = "cache-ref")
    protected CacheRef cacheRef;
    protected Cache cache;
    protected List<ResultMap> resultMap;
    protected List<ParameterMap> parameterMap;
    protected List<Sql> sql;
    protected List<Select> select;
    protected List<Insert> insert;
    protected List<Update> update;
    protected List<Delete> delete;
    @XmlAttribute(name = "namespace")
    protected String namespace;

    /**
     * Gets the value of the cacheRef property.
     * 
     * @return
     *     possible object is
     *     {@link CacheRef }
     *     
     */
    public CacheRef getCacheRef() {
        return cacheRef;
    }

    /**
     * Sets the value of the cacheRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link CacheRef }
     *     
     */
    public void setCacheRef(CacheRef value) {
        this.cacheRef = value;
    }

    /**
     * Gets the value of the cache property.
     * 
     * @return
     *     possible object is
     *     {@link Cache }
     *     
     */
    public Cache getCache() {
        return cache;
    }

    /**
     * Sets the value of the cache property.
     * 
     * @param value
     *     allowed object is
     *     {@link Cache }
     *     
     */
    public void setCache(Cache value) {
        this.cache = value;
    }

    /**
     * Gets the value of the resultMap property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the resultMap property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getResultMap().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ResultMap }
     * 
     * 
     */
    public List<ResultMap> getResultMap() {
        if (resultMap == null) {
            resultMap = new ArrayList<ResultMap>();
        }
        return this.resultMap;
    }

    /**
     * Gets the value of the parameterMap property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parameterMap property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParameterMap().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ParameterMap }
     * 
     * 
     */
    public List<ParameterMap> getParameterMap() {
        if (parameterMap == null) {
            parameterMap = new ArrayList<ParameterMap>();
        }
        return this.parameterMap;
    }

    /**
     * Gets the value of the sql property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sql property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSql().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Sql }
     * 
     * 
     */
    public List<Sql> getSql() {
        if (sql == null) {
            sql = new ArrayList<Sql>();
        }
        return this.sql;
    }

    /**
     * Gets the value of the select property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the select property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSelect().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Select }
     * 
     * 
     */
    public List<Select> getSelect() {
        if (select == null) {
            select = new ArrayList<Select>();
        }
        return this.select;
    }

    /**
     * Gets the value of the insert property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the insert property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInsert().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Insert }
     * 
     * 
     */
    public List<Insert> getInsert() {
        if (insert == null) {
            insert = new ArrayList<Insert>();
        }
        return this.insert;
    }

    /**
     * Gets the value of the update property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the update property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUpdate().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Update }
     * 
     * 
     */
    public List<Update> getUpdate() {
        if (update == null) {
            update = new ArrayList<Update>();
        }
        return this.update;
    }

    /**
     * Gets the value of the delete property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the delete property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDelete().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Delete }
     * 
     * 
     */
    public List<Delete> getDelete() {
        if (delete == null) {
            delete = new ArrayList<Delete>();
        }
        return this.delete;
    }

    /**
     * Gets the value of the namespace property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNamespace() {
        return namespace;
    }

    /**
     * Sets the value of the namespace property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNamespace(String value) {
        this.namespace = value;
    }

}
